[gd_scene load_steps=7 format=3 uid="uid://d3hijh78b1acc"]

[ext_resource type="PackedScene" uid="uid://qaaxecolyapg" path="res://Player/Player.tscn" id="1_4tj1i"]
[ext_resource type="Texture2D" uid="uid://cwgc4auymflfb" path="res://art/World1TileMap.png" id="4_1y3xg"]

[sub_resource type="Shader" id="Shader_4mpgc"]
code = "shader_type spatial;

uniform vec4 color : source_color;
uniform float amount : hint_range(0, 1);
uniform vec4 other_color : source_color = vec4(1.0); // Default values go after the hint.
uniform sampler2D image : source_color;

void vertex() {
	// Sample the color from the texture
    vec4 texColor = texture(image, UV);

    // Convert the sampled color from sRGB to linear space
    vec3 linearColor = pow(texColor.rgb, vec3(2.2));

    // Blend colors based on the amount
    vec4 finalColor = mix(color, other_color, amount);

    // Output the final color with the desired alpha
    COLOR = vec4(finalColor.rgb * linearColor, finalColor.a * texColor.a);
}

//void light() {
	// Called for every pixel for every light affecting the CanvasItem.
	// Uncomment to replace the default light processing function with this one.
//}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_bidw8"]
render_priority = 0
shader = SubResource("Shader_4mpgc")
shader_parameter/color = null
shader_parameter/amount = null
shader_parameter/other_color = Color(1, 1, 1, 1)

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_ueuxm"]
texture = ExtResource("4_1y3xg")
0:0/0 = 0
1:0/0 = 0
2:0/0 = 0
3:0/0 = 0
0:1/0 = 0
2:1/0 = 0
0:2/0 = 0
1:2/0 = 0
2:2/0 = 0
1:1/0 = 0
3:1/0 = 0

[sub_resource type="TileSet" id="TileSet_ptwyg"]
sources/8 = SubResource("TileSetAtlasSource_ueuxm")

[node name="World" type="Node2D"]

[node name="ManSprite" parent="." instance=ExtResource("1_4tj1i")]

[node name="Camera2D" type="Camera2D" parent="."]
zoom = Vector2(4, 4)

[node name="TileMap" type="TileMap" parent="."]
material = SubResource("ShaderMaterial_bidw8")
scale = Vector2(1.0192, 0.987579)
tile_set = SubResource("TileSet_ptwyg")
format = 2
layer_0/name = "1"
layer_0/z_index = -2
layer_0/tile_data = PackedInt32Array(-65538, 131080, 0, -65539, 65544, 0, -4, 8, 1, -2, 131080, 1, 65534, 131080, 2, 65532, 8, 2, 65533, 65544, 2, -65540, 8, 0, -3, 65544, 1, -65534, 65544, 1, -65533, 65544, 1, -131069, 65544, 0, -131070, 65544, 0, -131071, 8, 0, -131068, 65544, 0, 3, 196616, 1, 2, 196616, 1, -65535, 8, 1, -65532, 65544, 1, 4, 196616, 1, 1, 8, 1, 65539, 196616, 1, 65538, 196616, 1, 65540, 196616, 1, 65537, 8, 1, -65531, 131080, 1, 5, 131080, 1, 65541, 131080, 1, -131067, 131080, 0, 131076, 65544, 2, 131075, 65544, 2, 131074, 65544, 2, 131077, 131080, 2, 131073, 8, 2, 131071, 196616, 0, 65535, 196616, 0, -1, 196616, 0, -65537, 196616, 0, -131072, 196616, 0, -65536, 196616, 0, 0, 196616, 0, 65536, 196616, 0, 131072, 196616, 0, 196607, 196616, 0, 196606, 196616, 0, 131070, 196616, 0, 131069, 196616, 0, 131068, 196616, 0, 196604, 196616, 0, 196605, 196616, 0)
layer_1/name = "2"
layer_1/z_index = -1
layer_1/tile_data = PackedInt32Array(0, 65536, 0)
layer_2/name = "3"
layer_2/tile_data = PackedInt32Array()
